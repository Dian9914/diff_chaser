<launch>
  <!-- Arranca simulador, rviz e interfaz de arbotix para guiar el robot -->
  <!-- Supone que ya existe roscore -->
  <!-- Uso:  -->
  <!-- roslaunch mipkg start_coppelia.launch [<arg>:=<valor> ...] -->
  <!-- Argumentos:
         escena:   Fichero .ttt que contiene la escena; por defecto la que esta en
		   simulador/escenas/default.ttt (hay que escribir el "pathname" completo)
         sim_time: Si true, usar tiempo del simulador para ros (valor por defecto); 
                   si false, usar tiempo del sistema
         cfg_rviz: Fichero de configuracion de rviz. 
                   Por defecto, el que esta en config/config_pioneer.rviz
	 auto_fin: Si true (valor por defecto) cerrar simulador al acabar la simulacion
		   si false, no cerrarlo (puede arrancarse de nuevo la simulacion)
	 gui:	   Si true (valor por defecto) activar gui de teleoperacion
		   si false, no activarlo
  -->

  <arg name="escena" default="$(find diff_chaser)/scenes/default_scene.ttt"/>
  <arg name="sim_time" default="true" />
  <arg name="cfg_rviz" default= "$(find diff_chaser)/config/config_pioneer.rviz" />
  <arg name="auto_fin" default="true" />
  <arg name="gui" default="true" />

  <!-- Primero de todo, fijar la fuente del reloj -->

  <param name="/use_sim_time" value="$(arg sim_time)" if="$(arg sim_time)" />
  <rosparam param="/use_sim_time" command="delete" unless="$(arg sim_time)" />

  
  <!-- Dar valor al argumento parar en funcion  auto_fin -->

  <arg name="parar" value="-q" if="$(arg auto_fin)"/>
  <arg name="parar" value="" unless="$(arg auto_fin)"/>

  <!-- Arrancar simulador con las opciones adecuadas -->
    
  <node name="start_coppelia" type="start_coppelia.sh" pkg="diff_chaser" args="$(arg parar) -s $(arg escena)" output="screen" />

  <!-- Arrancar rviz con las opciones adecuadas -->

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg cfg_rviz)" output="screen"/>

  <!-- Arrancar arbotix_gui redireccionando el topico que genera a /robot/cmd_vel -->

  <node name="teleop" pkg="rqt_ground_robot_teleop" type="rqt_ground_robot_teleop" args="/cmd_vel:=/robot/cmd_vel" output="screen" if="$(arg gui)"/>

  <!-- Arrancar el nodo de lectura de imagen -->
  <node pkg="diff_chaser" type="image_node.py" name="image" output="screen" >
        <!-- posicion inicial del UAV -->
        <rosparam param="enable_verbose">False</rosparam>
  </node>
  
</launch>